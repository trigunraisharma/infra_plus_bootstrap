name: Frontend Deploy (S3/CloudFront)

on:
  workflow_run:
    workflows: ["Backend Deploy (ECS/ECR)"]
    types:
      - completed

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Fetch S3 bucket from SSM
        id: s3
        run: |
          BUCKET=$(aws ssm get-parameter --name "/my-react-node-app/s3_bucket" --query "Parameter.Value" --output text)
          echo "bucket=$BUCKET" >> $GITHUB_OUTPUT

      - name: Upload build to S3
        run: |
          echo "Uploading frontend build to S3 bucket: ${{ steps.s3.outputs.bucket }}"
          aws s3 sync frontend/build/ s3://${{ steps.s3.outputs.bucket }}/ --delete

      - name: Fetch CloudFront distribution ID from SSM
        id: cf
        run: |
          DIST_ID=$(aws ssm get-parameter --name "/my-react-node-app/cloudfront_id" --query "Parameter.Value" --output text)
          echo "dist_id=$DIST_ID" >> $GITHUB_OUTPUT

      - name: Invalidate CloudFront cache
        run: |
          echo "Invalidating CloudFront distribution: ${{ steps.cf.outputs.dist_id }}"
          aws cloudfront create-invalidation --distribution-id ${{ steps.cf.outputs.dist_id }} --paths "/*"